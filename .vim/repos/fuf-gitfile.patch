diff -r 4014e500fb8d autoload/fuf/gitfile.vim
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ fuzzyfinder/autoload/fuf/gitfile.vim	Sat Sep 03 13:31:07 2011 +0200
@@ -0,0 +1,130 @@
+"=============================================================================
+" Copyright (c) 2007-2010 Takeshi NISHIDA
+" Copyright (c) 2011 Beno√Æt ZUGMEYER
+"
+"=============================================================================
+" LOAD GUARD {{{1
+
+if !l9#guardScriptLoading(expand('<sfile>:p'), 0, 0, [])
+  finish
+endif
+
+" }}}1
+"=============================================================================
+" GLOBAL FUNCTIONS {{{1
+
+"
+function fuf#gitfile#createHandler(base)
+  return a:base.concretize(copy(s:handler))
+endfunction
+
+"
+function fuf#gitfile#getSwitchOrder()
+  return g:fuf_gitfile_switchOrder
+endfunction
+
+"
+function fuf#gitfile#getEditableDataNames()
+  return []
+endfunction
+
+"
+function fuf#gitfile#renewCache()
+  let s:cache = {}
+endfunction
+
+"
+function fuf#gitfile#requiresOnCommandPre()
+  return 0
+endfunction
+
+"
+function fuf#gitfile#onInit()
+  call fuf#defineLaunchCommand('FufGitFile', s:MODE_NAME, '""', [])
+endfunction
+
+" }}}1
+"=============================================================================
+" LOCAL FUNCTIONS/VARIABLES {{{1
+
+let s:MODE_NAME = expand('<sfile>:t:r')
+
+"
+function s:enumItems()
+  let key = join([getcwd(), g:fuf_ignoreCase], "\n")
+  if !exists('s:cache[key]')
+    let s:cache[key] = split(system('git ls-files'), '\n')
+    call filter(s:cache[key], 'filereadable(v:val)') " filter out directories
+    call map(s:cache[key], 'fuf#makePathItem(fnamemodify(v:val, ":~:."), "", 0)')
+    call fuf#mapToSetSerialIndex(s:cache[key], 1)
+    call fuf#mapToSetAbbrWithSnippedWordAsPath(s:cache[key])
+  endif
+  return s:cache[key]
+endfunction
+
+" }}}1
+"=============================================================================
+" s:handler {{{1
+
+let s:handler = {}
+
+"
+function s:handler.getModeName()
+  return s:MODE_NAME
+endfunction
+
+"
+function s:handler.getPrompt()
+  return fuf#formatPrompt(g:fuf_gitfile_prompt, self.partialMatching, '')
+endfunction
+
+"
+function s:handler.getPreviewHeight()
+  return g:fuf_previewHeight
+endfunction
+
+"
+function s:handler.isOpenable(enteredPattern)
+  return 1
+endfunction
+
+"
+function s:handler.makePatternSet(patternBase)
+  return fuf#makePatternSet(a:patternBase, 's:interpretPrimaryPatternForPath',
+        \                   self.partialMatching)
+endfunction
+
+"
+function s:handler.makePreviewLines(word, count)
+  return fuf#makePreviewLinesForFile(a:word, a:count, self.getPreviewHeight())
+endfunction
+
+"
+function s:handler.getCompleteItems(patternPrimary)
+  return self.items
+endfunction
+
+"
+function s:handler.onOpen(word, mode)
+  call fuf#openFile(a:word, a:mode, g:fuf_reuseWindow)
+endfunction
+
+"
+function s:handler.onModeEnterPre()
+endfunction
+
+"
+function s:handler.onModeEnterPost()
+  " NOTE: Comparing filenames is faster than bufnr('^' . fname . '$')
+  let bufNamePrev = fnamemodify(bufname(self.bufNrPrev), ':~:.')
+  let self.items = copy(s:enumItems())
+  call filter(self.items, 'v:val.word !=# bufNamePrev')
+endfunction
+
+"
+function s:handler.onModeLeavePost(opened)
+endfunction
+
+" }}}1
+"=============================================================================
+" vim: set fdm=marker:
diff -r 4014e500fb8d plugin/fuf.vim
--- fuzzyfinder/plugin/fuf.vim	Thu Sep 30 22:11:25 2010 +0900
+++ fuzzyfinder/plugin/fuf.vim	Sat Sep 03 13:31:07 2011 +0200
@@ -63,6 +63,9 @@
   call l9#defineVariableDefault('g:fuf_coveragefile_exclude'    , '\v\~$|\.(o|exe|dll|bak|orig|sw[po])$|(^|[/\\])\.(hg|git|bzr)($|[/\\])')
   call l9#defineVariableDefault('g:fuf_coveragefile_globPatterns', ['**/.*', '**/*'])
   "---------------------------------------------------------------------------
+  call l9#defineVariableDefault('g:fuf_gitfile_prompt'     , '>GitFile>')
+  call l9#defineVariableDefault('g:fuf_gitfile_switchOrder', 30)
+  "---------------------------------------------------------------------------
   call l9#defineVariableDefault('g:fuf_dir_prompt'     , '>Dir[]>')
   call l9#defineVariableDefault('g:fuf_dir_switchOrder', 40)
   call l9#defineVariableDefault('g:fuf_dir_exclude'    , '\v(^|[/\\])\.(hg|git|bzr)($|[/\\])')
@@ -118,6 +121,7 @@
   "---------------------------------------------------------------------------
   call fuf#addMode('buffer')
   call fuf#addMode('file')
+  call fuf#addMode('gitfile')
   call fuf#addMode('coveragefile')
   call fuf#addMode('dir')
   call fuf#addMode('mrufile')
